define(["./when-cbf8cd21","./Check-35e1a91d","./Math-e66fad2a","./Cartesian2-44433f55","./Transforms-23521d7e","./RuntimeError-f4c64df1","./WebGLConstants-95ceb4e9","./ComponentDatatype-7ee14e67","./GeometryAttribute-b1aaa48a","./GeometryAttributes-90846c5f","./IndexDatatype-66caba23","./IntersectionTests-4068523d","./Plane-47e9c397","./arrayRemoveDuplicates-b817241d","./BoundingRectangle-bf24baf3","./EllipsoidTangentPlane-ae6dc4fa","./EllipsoidRhumbLine-862a2df4","./PolygonPipeline-43196bfb","./PolylineVolumeGeometryLibrary-466d8ee4","./EllipsoidGeodesic-7779e55a","./PolylinePipeline-9b888896"],function(d,e,t,u,y,i,a,h,f,g,m,n,r,o,l,s,p,c,v,E,P){"use strict";function _(e){var i=(e=d.defaultValue(e,d.defaultValue.EMPTY_OBJECT)).polylinePositions,a=e.shapePositions;this._positions=i,this._shape=a,this._ellipsoid=u.Ellipsoid.clone(d.defaultValue(e.ellipsoid,u.Ellipsoid.WGS84)),this._cornerType=d.defaultValue(e.cornerType,v.CornerType.ROUNDED),this._granularity=d.defaultValue(e.granularity,t.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry";var n=1+i.length*u.Cartesian3.packedLength;n+=1+a.length*u.Cartesian2.packedLength,this.packedLength=n+u.Ellipsoid.packedLength+2}_.pack=function(e,i,a){var n;a=d.defaultValue(a,0);var t=e._positions,r=t.length;for(i[a++]=r,n=0;n<r;++n,a+=u.Cartesian3.packedLength)u.Cartesian3.pack(t[n],i,a);var o=e._shape,r=o.length;for(i[a++]=r,n=0;n<r;++n,a+=u.Cartesian2.packedLength)u.Cartesian2.pack(o[n],i,a);return u.Ellipsoid.pack(e._ellipsoid,i,a),a+=u.Ellipsoid.packedLength,i[a++]=e._cornerType,i[a]=e._granularity,i};var b=u.Ellipsoid.clone(u.Ellipsoid.UNIT_SPHERE),k={polylinePositions:void 0,shapePositions:void 0,ellipsoid:b,height:void 0,cornerType:void 0,granularity:void 0};_.unpack=function(e,i,a){i=d.defaultValue(i,0);for(var n=e[i++],t=new Array(n),r=0;r<n;++r,i+=u.Cartesian3.packedLength)t[r]=u.Cartesian3.unpack(e,i);n=e[i++];var o=new Array(n);for(r=0;r<n;++r,i+=u.Cartesian2.packedLength)o[r]=u.Cartesian2.unpack(e,i);var l=u.Ellipsoid.unpack(e,i,b);i+=u.Ellipsoid.packedLength;var s=e[i++],p=e[i];return d.defined(a)?(a._positions=t,a._shape=o,a._ellipsoid=u.Ellipsoid.clone(l,a._ellipsoid),a._cornerType=s,a._granularity=p,a):(k.polylinePositions=t,k.shapePositions=o,k.cornerType=s,k.granularity=p,new _(k))};var C=new l.BoundingRectangle;return _.createGeometry=function(e){var i=e._positions,a=o.arrayRemoveDuplicates(i,u.Cartesian3.equalsEpsilon),n=e._shape,n=v.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(n);if(!(a.length<2||n.length<3)){c.PolygonPipeline.computeWindingOrder2D(n)===c.WindingOrder.CLOCKWISE&&n.reverse();var t=l.BoundingRectangle.fromPoints(n,C);return function(e,i){var a=new g.GeometryAttributes;a.position=new f.GeometryAttribute({componentDatatype:h.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var n=i.length,t=a.position.values.length/3,r=e.length/3/n,o=m.IndexDatatype.createTypedArray(t,2*n*(1+r)),l=0,s=0,p=s*n;for(c=0;c<n-1;c++)o[l++]=c+p,o[l++]=c+p+1;for(o[l++]=n-1+p,o[l++]=p,p=(s=r-1)*n,c=0;c<n-1;c++)o[l++]=c+p,o[l++]=c+p+1;for(o[l++]=n-1+p,o[l++]=p,s=0;s<r-1;s++)for(var d=n*s,u=d+n,c=0;c<n;c++)o[l++]=c+d,o[l++]=c+u;return new f.Geometry({attributes:a,indices:m.IndexDatatype.createTypedArray(t,o),boundingSphere:y.BoundingSphere.fromVertices(e),primitiveType:f.PrimitiveType.LINES})}(v.PolylineVolumeGeometryLibrary.computePositions(a,n,t,e,!1),n)}},function(e,i){return d.defined(i)&&(e=_.unpack(e,i)),e._ellipsoid=u.Ellipsoid.clone(e._ellipsoid),_.createGeometry(e)}});
